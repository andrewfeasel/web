function AudioHandler(){this.hasAudio=!0;let a=window.AudioContext||window.webkitAudioContext;if(this.sampleBuffer=new Float64Array(735),this.samplesPerFrame=735,void 0===a)log("Audio disabled: no Web Audio API support"),this.hasAudio=!1;else{this.actx=new a;let b=this.actx.sampleRate/60;this.sampleBuffer=new Float64Array(b),this.samplesPerFrame=b,log("Audio initialized, sample rate: "+60*b),this.inputBuffer=new Float64Array(4096),this.inputBufferPos=0,this.inputReadPos=0,this.scriptNode=void 0,this.dummyNode=void 0}this.resume=function(){this.hasAudio&&(this.actx.onstatechange=function(){console.log(this.actx.state)},this.actx.resume())},this.start=function(){if(this.hasAudio){this.dummyNode=this.actx.createBufferSource(),this.dummyNode.buffer=this.actx.createBuffer(1,44100,44100),this.dummyNode.loop=!0,this.scriptNode=this.actx.createScriptProcessor(2048,1,1);let a=this;this.scriptNode.onaudioprocess=function(b){a.process(b)},this.dummyNode.connect(this.scriptNode),this.scriptNode.connect(this.actx.destination),this.dummyNode.start()}},this.stop=function(){this.hasAudio&&(this.dummyNode&&(this.dummyNode.stop(),this.dummyNode.disconnect(),this.dummyNode=void 0),this.scriptNode&&(this.scriptNode.disconnect(),this.scriptNode=void 0),this.inputBufferPos=0,this.inputReadPos=0)},this.process=function(a){this.inputReadPos+2048>this.inputBufferPos&&(this.inputReadPos=this.inputBufferPos-2048),this.inputReadPos+4096<this.inputBufferPos&&(this.inputReadPos+=2048);let b=a.outputBuffer.getChannelData(0);for(let c=0;2048>c;c++)b[c]=this.inputBuffer[4095&this.inputReadPos++]},this.nextBuffer=function(){if(this.hasAudio)for(let a,b=0;b<this.samplesPerFrame;b++)a=this.sampleBuffer[b],this.inputBuffer[4095&this.inputBufferPos++]=a}}